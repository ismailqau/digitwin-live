name: Terraform Deploy

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'infrastructure/terraform/**'
      - '.github/workflows/terraform-deploy.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'infrastructure/terraform/**'

env:
  TERRAFORM_VERSION: '1.5.0'

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Terraform Format Check
        working-directory: infrastructure/terraform
        run: terraform fmt -check -recursive
      
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -backend=false
      
      - name: Terraform Validate
        working-directory: infrastructure/terraform
        run: terraform validate

  plan-dev:
    name: Plan Dev Environment
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_DEV }}
      
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -backend-config=backends/dev.hcl
      
      - name: Terraform Plan
        working-directory: infrastructure/terraform
        run: |
          terraform plan \
            -var-file=environments/dev.tfvars \
            -var="project_id=${{ secrets.GCP_PROJECT_ID_DEV }}" \
            -out=dev.tfplan
      
      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: dev-tfplan
          path: infrastructure/terraform/dev.tfplan

  plan-staging:
    name: Plan Staging Environment
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_STAGING }}
      
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -backend-config=backends/staging.hcl
      
      - name: Terraform Plan
        working-directory: infrastructure/terraform
        run: |
          terraform plan \
            -var-file=environments/staging.tfvars \
            -var="project_id=${{ secrets.GCP_PROJECT_ID_STAGING }}" \
            -out=staging.tfplan
      
      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: staging-tfplan
          path: infrastructure/terraform/staging.tfplan

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: plan-dev
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_DEV }}
      
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -backend-config=backends/dev.hcl
      
      - name: Download Plan
        uses: actions/download-artifact@v3
        with:
          name: dev-tfplan
          path: infrastructure/terraform
      
      - name: Terraform Apply
        working-directory: infrastructure/terraform
        run: terraform apply -auto-approve dev.tfplan
      
      - name: Terraform Output
        working-directory: infrastructure/terraform
        run: terraform output -json > outputs.json
      
      - name: Upload Outputs
        uses: actions/upload-artifact@v3
        with:
          name: dev-outputs
          path: infrastructure/terraform/outputs.json

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: plan-staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_STAGING }}
      
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -backend-config=backends/staging.hcl
      
      - name: Terraform Apply
        working-directory: infrastructure/terraform
        run: |
          terraform apply -auto-approve \
            -var-file=environments/staging.tfvars \
            -var="project_id=${{ secrets.GCP_PROJECT_ID_STAGING }}"
      
      - name: Terraform Output
        working-directory: infrastructure/terraform
        run: terraform output -json > outputs.json
      
      - name: Upload Outputs
        uses: actions/upload-artifact@v3
        with:
          name: staging-outputs
          path: infrastructure/terraform/outputs.json

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}
      
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -backend-config=backends/prod.hcl
      
      - name: Terraform Plan
        working-directory: infrastructure/terraform
        run: |
          terraform plan \
            -var-file=environments/prod.tfvars \
            -var="project_id=${{ secrets.GCP_PROJECT_ID_PROD }}" \
            -out=prod.tfplan
      
      - name: Terraform Apply
        working-directory: infrastructure/terraform
        run: terraform apply -auto-approve prod.tfplan
      
      - name: Terraform Output
        working-directory: infrastructure/terraform
        run: terraform output -json > outputs.json
      
      - name: Upload Outputs
        uses: actions/upload-artifact@v3
        with:
          name: prod-outputs
          path: infrastructure/terraform/outputs.json
